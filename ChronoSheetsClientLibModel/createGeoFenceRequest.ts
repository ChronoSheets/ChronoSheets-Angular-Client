/**
 * ChronoSheets API
 * <div style=\'font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;\'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target=\'_BLANK\' href=\'http://tsheets.xyz/signup\'>http://tsheets.xyz/signup</a>.  </p></div><div id=\'cs-extra-info\'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { BasicCoordinate } from './basicCoordinate';


/**
 * A request object for creating a new geofence
 */
export interface CreateGeoFenceRequest { 
    /**
     * The name of the geo fence
     */
    Name?: string;
    /**
     * A list of coordinates specifying the geofence region
     */
    FenceCoordinates?: Array<BasicCoordinate>;
    /**
     * The job code to be used when the person enters/leaves the geofence
     */
    TriggerJobCodeId?: number;
    /**
     * The task to be used when the person enters/leaves the geofence
     */
    TriggerTaskId?: number;
    /**
     * Send an alert to a user, specified by their user ID
     */
    SendAlertToOrgGroupId?: number;
    /**
     * Define when you want the alerts to be sent
     */
    AlertSettings?: CreateGeoFenceRequest.AlertSettingsEnum;
    /**
     * Define how to you want to trigger the timesheet automation
     */
    TriggerSettings?: CreateGeoFenceRequest.TriggerSettingsEnum;
    /**
     * The start hour in which this geofence should apply.  After this time, the geofence will be active.
     */
    StartTimeHour?: number;
    /**
     * The start minute in which this geofence should apply.  After this time, the geofence will be active.
     */
    StartTimeMinute?: number;
    /**
     * The end hour in which this geofence will stop applying.  After this time, the geofence will be inactive.
     */
    EndTimeHour?: number;
    /**
     * The end minute in which this geofence will stop applying.  After this time, the geofence will be inactive.
     */
    EndTimeMinute?: number;
}
export namespace CreateGeoFenceRequest {
    export type AlertSettingsEnum = 'None' | 'SendWhenEntering' | 'SendWhenExiting' | 'SendWhenEnteringOrExiting';
    export const AlertSettingsEnum = {
        None: 'None' as AlertSettingsEnum,
        SendWhenEntering: 'SendWhenEntering' as AlertSettingsEnum,
        SendWhenExiting: 'SendWhenExiting' as AlertSettingsEnum,
        SendWhenEnteringOrExiting: 'SendWhenEnteringOrExiting' as AlertSettingsEnum
    };
    export type TriggerSettingsEnum = 'None' | 'StartTimesheetWhenEntering' | 'StopTimesheetWhenEntering' | 'StartOnEnterStopOnLeave';
    export const TriggerSettingsEnum = {
        None: 'None' as TriggerSettingsEnum,
        StartTimesheetWhenEntering: 'StartTimesheetWhenEntering' as TriggerSettingsEnum,
        StopTimesheetWhenEntering: 'StopTimesheetWhenEntering' as TriggerSettingsEnum,
        StartOnEnterStopOnLeave: 'StartOnEnterStopOnLeave' as TriggerSettingsEnum
    };
}


