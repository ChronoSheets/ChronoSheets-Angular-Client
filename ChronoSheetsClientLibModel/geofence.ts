/**
 * ChronoSheets API
 * <div style=\'font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;\'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target=\'_BLANK\' href=\'http://tsheets.xyz/signup\'>http://tsheets.xyz/signup</a>.  </p></div><div id=\'cs-extra-info\'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { BasicCoordinate } from './basicCoordinate';


/**
 * A geofence
 */
export interface Geofence { 
    /**
     * The ID of the geofence
     */
    GeoFencingId?: number;
    /**
     * The ID of the organisation owning the geofence record
     */
    OrgId?: number;
    /**
     * The ID of the user/employee who created the geofence
     */
    CreatedByUserId?: number;
    /**
     * The ID of the user/employee who last updated the geofence
     */
    LastUpdatedByUserId?: number;
    /**
     * A descriptive name of the geofence
     */
    Name?: string;
    /**
     * The name of the approx. location of the geofence
     */
    LocationName?: string;
    /**
     * A list of co-ordinates specifying the geofence
     */
    Coordinates?: Array<BasicCoordinate>;
    /**
     * The date and time the geofence was created.  Time is in UTC.
     */
    CreatedAt?: string;
    /**
     * The date and time the geofence was updated last.  Time is in UTC.
     */
    UpdatedAt?: string;
    /**
     * The ID of the job code used when the employee enters/exits the geofence
     */
    TriggerJobCodeId?: number;
    /**
     * The ID of the task used when the employee enters/exits the geofence
     */
    TriggerTaskId?: number;
    /**
     * The settings for triggering actions
     */
    TriggerSettings?: Geofence.TriggerSettingsEnum;
    /**
     * The organisation group that will be notified when the geofence is triggered
     */
    AlertToOrgGroupId?: number;
    /**
     * The settings for trigger alerts
     */
    AlertSettings?: Geofence.AlertSettingsEnum;
    /**
     * The hour start time. E.g. 13 would be 1pm.  Time is in 24hr format.
     */
    StartTimeHour?: number;
    /**
     * The minute start time.  E.g. 46 would be the 46th minute of the hour.
     */
    StartTimeMinute?: number;
    /**
     * The hour end time. E.g. 21 would be 9pm.  Time is in 24hr format.
     */
    EndTimeHour?: number;
    /**
     * The minute end time.  E.g. 13 would be the 13th minute of the hour.
     */
    EndTimeMinute?: number;
}
export namespace Geofence {
    export type TriggerSettingsEnum = 'None' | 'StartTimesheetWhenEntering' | 'StopTimesheetWhenEntering' | 'StartOnEnterStopOnLeave';
    export const TriggerSettingsEnum = {
        None: 'None' as TriggerSettingsEnum,
        StartTimesheetWhenEntering: 'StartTimesheetWhenEntering' as TriggerSettingsEnum,
        StopTimesheetWhenEntering: 'StopTimesheetWhenEntering' as TriggerSettingsEnum,
        StartOnEnterStopOnLeave: 'StartOnEnterStopOnLeave' as TriggerSettingsEnum
    };
    export type AlertSettingsEnum = 'None' | 'SendWhenEntering' | 'SendWhenExiting' | 'SendWhenEnteringOrExiting';
    export const AlertSettingsEnum = {
        None: 'None' as AlertSettingsEnum,
        SendWhenEntering: 'SendWhenEntering' as AlertSettingsEnum,
        SendWhenExiting: 'SendWhenExiting' as AlertSettingsEnum,
        SendWhenEnteringOrExiting: 'SendWhenEnteringOrExiting' as AlertSettingsEnum
    };
}


